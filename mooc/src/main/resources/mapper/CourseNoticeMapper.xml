<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mooc.mooc.mapper.CourseNoticeMapper">
  <resultMap id="BaseResultMap" type="com.mooc.mooc.model.CourseNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap id="ExtendedResultMap" type="com.mooc.mooc.vo.CourseNoticeVO" extends="BaseResultMap">
    <result column="user_name" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mooc.mooc.model.CourseNotice">
    insert into course_notice (id, course_id, user_id, 
      content, create_time)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mooc.mooc.model.CourseNotice">
    update course_notice
    set course_id = #{courseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ExtendedResultMap">
    select c.id, c.course_id, c.user_id, c.content, c.create_time, u.user_name, u.name
    from course_notice c
    left join user_info u
    on c.user_id = u.user_id
    where c.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCourseId" resultMap="ExtendedResultMap">
    select c.id, c.course_id, c.user_id, c.content, c.create_time, u.user_name, u.name
    from course_notice c
    left join user_info u
    on c.user_id = u.user_id
    where c.course_id = #{courseId}
    order by create_time desc
  </select>
</mapper>